#!/usr/bin/env python

from __future__ import division
import numpy as np
from Ga2O3_GaO_ps_Class import *

lat = 3.293087727
ss_bond_len = [
    3.040000, 
    3.040000, 3.040000, 3.040000, 3.109274, 3.109274, 3.277766, 
    3.277766, 3.300672, 3.300672, 3.300672, 3.300672, 3.327418, 
    3.327418, 3.327418, 3.327418, 3.445864, 3.445864, 3.445864, 
    3.445864, 3.605804, 3.612253, 4.337574, 4.337574, 4.470498, 
    4.470498, 4.470498, 4.470498, 4.652131, 4.716293, 4.716293, 
    4.721225, 4.721225, 4.862916, 4.945890, 4.945890,
]
ps_len_cos = [
    [1.802903, -0.957343], 
    [1.802903, -0.288955], [1.802903, -0.000000], [1.802903, 0.000000], 
    [1.802903, 0.288955], [1.802903, 0.957343], [1.832680, -0.829386], 
    [1.832680, 0.154044], [1.832680, 0.154044], [1.832680, 0.537018], 
    [1.832680, 0.537018], [1.832680, 0.829386], [1.832680, -0.829386], 
    [1.832680, -0.537018], [1.832680, -0.537018], [1.832680, -0.154044], 
    [1.832680, -0.154044], [1.832680, 0.829386], [1.852850, -0.710753], 
    [1.852850, 0.000000], [1.852850, 0.703442], [1.852850, -0.703442], 
    [1.852850, -0.000000], [1.852850, 0.710753], [1.939922, -0.000000], 
    [1.939922, 0.171380], [1.939922, 0.985205], [1.939922, -0.985205], 
    [1.939922, -0.171380], [1.939922, -0.000000], [1.978409, -0.768294], 
    [1.978409, -0.607245], [1.978409, -0.607245], [1.978409, 0.202430], 
    [1.978409, 0.202430], [1.978409, 0.768294], [1.978409, -0.768294], 
    [1.978409, -0.202430], [1.978409, -0.202430], [1.978409, 0.607245], 
    [1.978409, 0.607245], [1.978409, 0.768294], [2.023449, -0.940314], 
    [2.023449, -0.340308], [2.023449, -0.000000], [2.023449, 0.000000], 
    [2.023449, 0.340308], [2.023449, 0.940314], [2.076942, -0.676109], 
    [2.076942, -0.085323], [2.076942, 0.085323], [2.076942, 0.676109], 
    [2.076942, -0.731845], [2.076942, -0.676109], [2.076942, -0.085323], 
    [2.076942, 0.085323], [2.076942, 0.676109], [2.076942, 0.731845], 
    [3.256051, -0.865806], [3.256051, -0.865806], [3.256051, -0.466823], 
    [3.256051, -0.466823], [3.256051, -0.180157], [3.256051, -0.180157], 
    [3.256051, 0.180157], [3.256051, 0.180157], [3.256051, 0.466823], 
    [3.256051, 0.466823], [3.256051, 0.865806], [3.256051, 0.865806], 
    [3.347687, -0.984528], [3.347687, -0.175226], [3.347687, -0.000000], 
    [3.347687, -0.000000], [3.347687, 0.175226], [3.347687, 0.984528], 
    [3.385999, -0.802774], [3.385999, -0.596283], [3.385999, 0.000000], 
    [3.385999, -0.000000], [3.385999, 0.596283], [3.385999, 0.802774], 
    [3.394459, -0.000000], [3.394459, 0.325428], [3.394459, 0.945567], 
    [3.394459, -0.945567], [3.394459, -0.325428], [3.394459, -0.000000], 
    [3.424386, -0.443875], [3.424386, 0.121800], [3.424386, 0.121800], 
    [3.424386, 0.443875], [3.424386, 0.887772], [3.424386, 0.887772], 
    [3.424386, -0.887772], [3.424386, -0.887772], [3.424386, -0.443875], 
    [3.424386, -0.121800], [3.424386, -0.121800], [3.424386, 0.443875], 
    [3.467579, -0.000000], [3.467579, -0.000000], [3.500108, -0.511628], 
    [3.500108, -0.511628], [3.500108, -0.434272], [3.500108, 0.434272], 
    [3.500108, 0.741380], [3.500108, 0.741380], [3.500108, -0.741380], 
    [3.500108, -0.741380], [3.500108, -0.434272], [3.500108, 0.434272], 
    [3.500108, 0.511628], [3.500108, 0.511628], [3.534411, -0.860115], 
    [3.534411, -0.860115], [3.534411, -0.488341], [3.534411, -0.488341], 
    [3.534411, -0.147396], [3.534411, -0.147396], [3.534411, 0.147396], 
    [3.534411, 0.147396], [3.534411, 0.488341], [3.534411, 0.488341], 
    [3.534411, 0.860115], [3.534411, 0.860115], [3.550690, 0.373161], 
    [3.550690, 0.927767], [3.550690, -0.927767], [3.550690, -0.373161], 
    [3.560148, -0.853897], [3.560148, -0.369906], [3.560148, 0.366101], 
    [3.560148, -0.853897], [3.560148, -0.369906], [3.560148, -0.366101], 
    [3.560148, -0.366101], [3.560148, 0.366101], [3.560148, 0.369906], 
    [3.560148, 0.369906], [3.560148, 0.853897], [3.560148, 0.853897], 
    [3.572376, -0.655243], [3.572376, -0.000000], [3.572376, 0.755418], 
    [3.572376, -0.755418], [3.572376, -0.000000], [3.572376, 0.655243], 
    [3.606230, -0.842986], [3.606230, -0.529977], [3.606230, -0.529977], 
    [3.606230, -0.092192], [3.606230, -0.092192], [3.606230, 0.092192], 
    [3.606230, 0.529977], [3.606230, 0.842986], [3.606230, 0.842986], 
    [3.606230, -0.842986], [3.606230, 0.092192], [3.606230, 0.529977], 
    [3.651841, -0.832457], [3.651841, -0.832457], [3.651841, -0.521019], 
    [3.651841, -0.521019], [3.651841, -0.188561], [3.651841, -0.188561], 
    [3.651841, 0.188561], [3.651841, 0.188561], [3.651841, 0.521019], 
    [3.651841, 0.521019], [3.651841, 0.832457], [3.651841, 0.832457], 
    [4.233807, -0.802306], [4.233807, -0.359015], [4.233807, 0.359015], 
    [4.233807, 0.476879], [4.233807, -0.476879], [4.233807, -0.359015], 
    [4.233807, 0.359015], [4.233807, 0.802306], [4.331985, -0.999914], 
    [4.331985, -0.013098], [4.331985, -0.000000], [4.331985, 0.000000], 
    [4.331985, 0.013098], [4.331985, 0.999914], [4.343936, -0.000000], 
    [4.343936, 0.000000], [4.411478, -0.344556], [4.411478, 0.344556], 
    [4.411478, 0.530610], [4.411478, 0.530610], [4.411478, 0.774425], 
    [4.411478, 0.774425], [4.411478, -0.774425], [4.411478, -0.774425], 
    [4.411478, -0.530610], [4.411478, -0.530610], [4.411478, -0.344556], 
    [4.411478, 0.344556], [4.413475, -0.819302], [4.413475, -0.819302], 
    [4.413475, -0.458402], [4.413475, -0.458402], [4.413475, -0.344400], 
    [4.413475, -0.344400], [4.413475, 0.344400], [4.413475, 0.344400], 
    [4.413475, 0.458402], [4.413475, 0.458402], [4.413475, 0.819302], 
    [4.413475, 0.819302], [4.482487, -0.339097], [4.482487, -0.074170], 
    [4.482487, 0.937823], [4.482487, -0.937823], [4.482487, -0.937823], 
    [4.482487, -0.339097], [4.482487, -0.074170], [4.482487, 0.074170], 
    [4.482487, 0.074170], [4.482487, 0.339097], [4.482487, 0.339097], 
    [4.482487, 0.937823], [4.522013, -0.728855], [4.522013, -0.728855], 
    [4.522013, -0.672267], [4.522013, -0.672267], [4.522013, -0.129721], 
    [4.522013, -0.129721], [4.522013, 0.129721], [4.522013, 0.129721], 
    [4.522013, 0.672267], [4.522013, 0.672267], [4.522013, 0.728855], 
    [4.522013, 0.728855], [4.530808, -0.929707], [4.530808, -0.929707], 
    [4.530808, -0.335481], [4.530808, -0.335481], [4.530808, -0.151981], 
    [4.530808, -0.151981], [4.530808, 0.151981], [4.530808, 0.151981], 
    [4.530808, 0.335481], [4.530808, 0.335481], [4.530808, 0.929707], 
    [4.530808, 0.929707], [4.550449, -0.668066], [4.550449, -0.597346], 
    [4.550449, -0.443696], [4.550449, -0.668066], [4.550449, -0.597346], 
    [4.550449, -0.443696], [4.550449, 0.443696], [4.550449, 0.443696], 
    [4.550449, 0.597346], [4.550449, 0.597346], [4.550449, 0.668066], 
    [4.550449, 0.668066], [4.556748, -0.704381], [4.556748, -0.704381], 
    [4.556748, -0.667142], [4.556748, -0.667142], [4.556748, -0.242421], 
    [4.556748, -0.242421], [4.556748, 0.242421], [4.556748, 0.242421], 
    [4.556748, 0.667142], [4.556748, 0.667142], [4.556748, 0.704381], 
    [4.556748, 0.704381], [4.611475, -0.659225], [4.611475, -0.659225], 
    [4.611475, -0.537423], [4.611475, -0.537423], [4.611475, -0.525927], 
    [4.611475, -0.525927], [4.611475, 0.525927], [4.611475, 0.525927], 
    [4.611475, 0.537423], [4.611475, 0.537423], [4.611475, 0.659225], 
    [4.611475, 0.659225], [4.627954, 0.328439], [4.627954, 0.524054], 
    [4.627954, 0.785809], [4.627954, -0.785809], [4.627954, -0.785809], 
    [4.627954, -0.524054], [4.627954, -0.524054], [4.627954, -0.328439], 
    [4.627954, -0.328439], [4.627954, 0.328439], [4.627954, 0.524054], 
    [4.627954, 0.785809], [4.652001, -0.909447], [4.652001, -0.909447], 
    [4.652001, -0.326741], [4.652001, -0.326741], [4.652001, -0.257190], 
    [4.652001, -0.257190], [4.652001, 0.257190], [4.652001, 0.257190], 
    [4.652001, 0.326741], [4.652001, 0.326741], [4.652001, 0.909447], 
    [4.652001, 0.909447], [4.673533, -0.975707], [4.673533, -0.975707], 
    [4.673533, -0.210586], [4.673533, -0.210586], [4.673533, -0.060407], 
    [4.673533, -0.060407], [4.673533, 0.060407], [4.673533, 0.060407], 
    [4.673533, 0.210586], [4.673533, 0.210586], [4.673533, 0.975707], 
    [4.673533, 0.975707], [4.674291, -0.704751], [4.674291, -0.704751], 
    [4.674291, -0.650366], [4.674291, -0.650366], [4.674291, -0.283461], 
    [4.674291, -0.283461], [4.674291, 0.283461], [4.674291, 0.283461], 
    [4.674291, 0.650366], [4.674291, 0.650366], [4.674291, 0.704751], 
    [4.674291, 0.704751], [4.690785, -0.648079], [4.690785, -0.499015], 
    [4.690785, -0.499015], [4.690785, 0.575306], [4.690785, 0.575306], 
    [4.690785, 0.648079], [4.690785, -0.648079], [4.690785, -0.575306], 
    [4.690785, -0.575306], [4.690785, 0.499015], [4.690785, 0.499015], 
    [4.690785, 0.648079], [4.732579, -0.963534], [4.732579, -0.963534], 
    [4.732579, -0.253853], [4.732579, -0.253853], [4.732579, -0.084624], 
    [4.732579, -0.084624], [4.732579, 0.084624], [4.732579, 0.084624], 
    [4.732579, 0.253853], [4.732579, 0.253853], [4.732579, 0.963534], 
    [4.732579, 0.963534], [4.774609, -0.955052], [4.774609, -0.955052], 
    [4.774609, -0.294105], [4.774609, -0.294105], [4.774609, -0.037115], 
    [4.774609, -0.037115], [4.774609, 0.037115], [4.774609, 0.037115], 
    [4.774609, 0.294105], [4.774609, 0.294105], [4.774609, 0.955052], 
    [4.774609, 0.955052], [4.786891, -0.926197], [4.786891, -0.926197], 
    [4.786891, -0.317534], [4.786891, -0.317534], [4.786891, -0.203299], 
    [4.786891, -0.203299], [4.786891, 0.203299], [4.786891, 0.203299], 
    [4.786891, 0.317534], [4.786891, 0.317534], [4.786891, 0.926197], 
    [4.786891, 0.926197],
]

# convert to numpy array for tuple slicing
ss_bond_len = np.array(ss_bond_len)
ps_len_cos = np.array(ps_len_cos)

# s: -1eV, p: 1eV, st: 3eV. The value is set arbitarily 
# here but follwing the incresing physical trend.
s_onsite = 0
Op_onsite = -17.5
onsite = [
    s_onsite, s_onsite, s_onsite, s_onsite,
    Op_onsite, Op_onsite, Op_onsite, Op_onsite, Op_onsite, Op_onsite,
    Op_onsite, Op_onsite, Op_onsite, Op_onsite, Op_onsite, Op_onsite,
    Op_onsite, Op_onsite, Op_onsite, Op_onsite, Op_onsite, Op_onsite,
    ]
hopping = np.zeros((416,))
unit_conv = 3.80998212 # hbar/2mA to eV

vss_start = -1
vss_end = 0
vss_step = 0.2

vps_start = 0
vps_end = 2.5
vps_step = 0.2

n = 4

vss_list = np.arange(vss_start, vss_end, vss_step)
vps_list = np.arange(vps_start, vps_end, vps_step)

target_emass = 0.31
threshold = 0.05

outfile = open("Emass_scan.csv", "w+")
good_scan_outfile = open("good_Emass_scan.csv", "w+")

for vss in vss_list:
    for vps in vps_list:
        print("vss=%.2f vps=%.2f started\n" %(vss, vps))
        # calculate ss hopping
        hopping[0:36] = vss * pow(np.divide(lat, ss_bond_len), n)
        # calculate sp hopping
        hopping[36:416] = vps * ps_len_cos[:,1] * pow(np.divide(lat, ps_len_cos[:,0]), n)
        
        my_class = Ga2O3_Class(onsite, hopping)
        outfile.writelines('%.3f\t%.3f\t' %(vss, vps) + my_class.getMassString())
        my_class.save4BandPlot('Emass_png/%.3f_%.3f_.png' %(vss, vps))

        if(np.abs(my_class.emass_0 - target_emass) < threshold):
            good_scan_outfile.writelines('%.3f\t%.3f\t' %(vss, vps) + my_class.getMassString())
        del my_class
